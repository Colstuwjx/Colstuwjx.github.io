<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>salt on Colstuwjx's site</title><link>https://colstuwjx.github.io/categories/salt/</link><description>Recent content in salt on Colstuwjx's site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 29 Aug 2014 20:00:00 +0800</lastBuildDate><atom:link href="https://colstuwjx.github.io/categories/salt/index.xml" rel="self" type="application/rss+xml"/><item><title>结合Salt-output实现Job前端下发的友好展现</title><link>https://colstuwjx.github.io/2014/08/%E7%BB%93%E5%90%88salt-output%E5%AE%9E%E7%8E%B0job%E5%89%8D%E7%AB%AF%E4%B8%8B%E5%8F%91%E7%9A%84%E5%8F%8B%E5%A5%BD%E5%B1%95%E7%8E%B0/</link><pubDate>Fri, 29 Aug 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/08/%E7%BB%93%E5%90%88salt-output%E5%AE%9E%E7%8E%B0job%E5%89%8D%E7%AB%AF%E4%B8%8B%E5%8F%91%E7%9A%84%E5%8F%8B%E5%A5%BD%E5%B1%95%E7%8E%B0/</guid><description>&lt;p>最近一段时间一直在做类似salt-halite的Salt作业发布Web工具，其中很重要的一点就是如何友好的展现输出，一直也是很想直接调用Salt原生的salt-output系统，没能做成。在通过Github上给官方提Issue，以及群里运维大神苦咖啡的热心帮助下，终有所得，不敢有所藏，愿分享之。&lt;/p></description></item><item><title>源码解读Saltstack运行机制之Job Runtime</title><link>https://colstuwjx.github.io/2014/07/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BBsaltstack%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E4%B9%8Bjob-runtime/</link><pubDate>Wed, 30 Jul 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/07/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BBsaltstack%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E4%B9%8Bjob-runtime/</guid><description>&lt;p>鄙人深切以为 “在开源的世界里阅读源码才是深层次理解软件运行机制的不二法门”，本系列即是旨在通过解读（当然，鄙人实力有限，只是粗浅的解读）Saltstack源码的方式，了解Saltstack内部的运行机制，对排障和更好理解和二次开发Saltstack有一定助力。&lt;/p></description></item><item><title>Salt 自动化系统碎碎念</title><link>https://colstuwjx.github.io/2014/07/salt-%E8%87%AA%E5%8A%A8%E5%8C%96%E7%B3%BB%E7%BB%9F%E7%A2%8E%E7%A2%8E%E5%BF%B5/</link><pubDate>Mon, 28 Jul 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/07/salt-%E8%87%AA%E5%8A%A8%E5%8C%96%E7%B3%BB%E7%BB%9F%E7%A2%8E%E7%A2%8E%E5%BF%B5/</guid><description>&lt;p>使用Saltstack也有段时间，期间踩了不少坑，有的解决了，有的解决不了便避开了。本文便是一些排障经验的归纳和使用体验的总结，纯属个人经验，不喜勿喷。&lt;/p></description></item><item><title>Saltstack 新特性测试之proxy minion</title><link>https://colstuwjx.github.io/2014/07/saltstack-%E6%96%B0%E7%89%B9%E6%80%A7%E6%B5%8B%E8%AF%95%E4%B9%8Bproxy-minion/</link><pubDate>Sat, 19 Jul 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/07/saltstack-%E6%96%B0%E7%89%B9%E6%80%A7%E6%B5%8B%E8%AF%95%E4%B9%8Bproxy-minion/</guid><description>&lt;p>salt 目前主要的应用场景是Linux OS下，另外还有Windows Client（Win下没用过，但是看官方issue，应该……），最近关注到官方的一个小模块提到了Proxy minion，群里也多有提及，便想着看看到底是啥存在。&lt;/p></description></item><item><title>[ 翻译 ] salt 新通信架构——salt raet（Github篇）</title><link>https://colstuwjx.github.io/2014/07/%E7%BF%BB%E8%AF%91-salt-%E6%96%B0%E9%80%9A%E4%BF%A1%E6%9E%B6%E6%9E%84salt-raetgithub%E7%AF%87/</link><pubDate>Sun, 06 Jul 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/07/%E7%BF%BB%E8%AF%91-salt-%E6%96%B0%E9%80%9A%E4%BF%A1%E6%9E%B6%E6%9E%84salt-raetgithub%E7%AF%87/</guid><description>&lt;p>Saltstack官方在salt 2014 介绍视频中引入了salt raet概念，salt raet是继Salt-Zeromq, Salt-Ssh之后的第三套通信体系，全名为Reliable Asynchronous Event Transport,即基于事件的可靠异步传输协议 —— by 译者&lt;/p></description></item><item><title>Saltstack 学习之Salt Formulas</title><link>https://colstuwjx.github.io/2014/06/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Bsalt-formulas/</link><pubDate>Sat, 14 Jun 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/06/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Bsalt-formulas/</guid><description>&lt;p>Saltstack自0.17.x版本开始引进Formulas的概念，旨在通过简化State和集成数据来实现State的友好管理，本文将就此展开探讨。更多的样例可以参见：&lt;a href="https://github.com/saltstack-formulas"> Formulas.Git&lt;/a>&lt;/p></description></item><item><title>Saltstack 应用技巧之Pillar的灵活管理</title><link>https://colstuwjx.github.io/2014/06/saltstack-%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B9%8Bpillar%E7%9A%84%E7%81%B5%E6%B4%BB%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 14 Jun 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/06/saltstack-%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B9%8Bpillar%E7%9A%84%E7%81%B5%E6%B4%BB%E7%AE%A1%E7%90%86/</guid><description>&lt;p>Saltstack使用Pillar和Grains数据来管理和分类Minion，其中Grains数据作为Minion的“固有属性”存储在Minion端，而Pillar则作为“变量数据”存储在Salt-Master端，本文就如何灵活的应用和管理Pillar来实现分类与配置部署的话题予以探讨。&lt;/p></description></item><item><title>Saltstack 学习之Scheduler</title><link>https://colstuwjx.github.io/2014/06/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Bscheduler/</link><pubDate>Thu, 12 Jun 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/06/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Bscheduler/</guid><description>&lt;p>Saltstack原生提供schedule模块来完成计划任务的功能，基于State完成额定的定时执行的任务，本文将就此展开讲述。&lt;/p></description></item><item><title>建立Saltstack运转机制之个人做法（一）</title><link>https://colstuwjx.github.io/2014/06/%E5%BB%BA%E7%AB%8Bsaltstack%E8%BF%90%E8%BD%AC%E6%9C%BA%E5%88%B6%E4%B9%8B%E4%B8%AA%E4%BA%BA%E5%81%9A%E6%B3%95%E4%B8%80/</link><pubDate>Wed, 11 Jun 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/06/%E5%BB%BA%E7%AB%8Bsaltstack%E8%BF%90%E8%BD%AC%E6%9C%BA%E5%88%B6%E4%B9%8B%E4%B8%AA%E4%BA%BA%E5%81%9A%E6%B3%95%E4%B8%80/</guid><description>&lt;p>一个企业的IT系统的运转机制是非常复杂的，如何结合Saltstack加入自动化运维的基因，不同的运维工程师都有各自独到的见解和做法，本文就此介绍下鄙人参考大神们做法得出的一些拙见。&lt;/p></description></item><item><title>Saltstack 实战之event + returner的灵活使用</title><link>https://colstuwjx.github.io/2014/05/saltstack-%E5%AE%9E%E6%88%98%E4%B9%8Bevent--returner%E7%9A%84%E7%81%B5%E6%B4%BB%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 15 May 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/05/saltstack-%E5%AE%9E%E6%88%98%E4%B9%8Bevent--returner%E7%9A%84%E7%81%B5%E6%B4%BB%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>最近看到绿肥大神的那篇salt event系统的介绍，觉得可以通过这种方式灵活的建立起一个反馈机制，主要用到的是绿肥大神使用的event监听以及returner本地返回。&lt;/p></description></item><item><title>Saltstack 学习之target minions（一）</title><link>https://colstuwjx.github.io/2014/05/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Btarget-minions%E4%B8%80/</link><pubDate>Wed, 14 May 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/05/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Btarget-minions%E4%B8%80/</guid><description>&lt;p>本文总结saltstack如何定位目标主机，以及介绍一些常见使用样例。&lt;/p></description></item><item><title>Saltstack 学习之target minions（二）</title><link>https://colstuwjx.github.io/2014/05/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Btarget-minions%E4%BA%8C/</link><pubDate>Wed, 14 May 2014 20:00:00 +0800</pubDate><guid>https://colstuwjx.github.io/2014/05/saltstack-%E5%AD%A6%E4%B9%A0%E4%B9%8Btarget-minions%E4%BA%8C/</guid><description>&lt;p>本文紧接上一篇，就target的各分类方式的详细用法予以讲解。&lt;/p></description></item></channel></rss>